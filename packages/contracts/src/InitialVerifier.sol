//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// 2019 OKIMS
//      ported to solidity 0.6
//      fixed linter warnings
//      added requiere error messages
//
//
// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0;
library Pairing {
    struct G1Point {
        uint X;
        uint Y;
    }
    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint[2] X;
        uint[2] Y;
    }
    /// @return the generator of G1
    function P1() internal pure returns (G1Point memory) {
        return G1Point(1, 2);
    }
    /// @return the generator of G2
    function P2() internal pure returns (G2Point memory) {
        // Original code point
        return G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );

/*
        // Changed by Jordi point
        return G2Point(
            [10857046999023057135944570762232829481370756359578518086990519993285655852781,
             11559732032986387107991004021392285783925812861821192530917403151452391805634],
            [8495653923123431417604973247489272438418190587263600148770280649306958101930,
             4082367875863433681332203403145435568316851327593401208105741076214120093531]
        );
*/
    }
    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.
    function negate(G1Point memory p) internal pure returns (G1Point memory r) {
        // The prime q in the base field F_q for G1
        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;
        if (p.X == 0 && p.Y == 0)
            return G1Point(0, 0);
        return G1Point(p.X, q - (p.Y % q));
    }
    /// @return r the sum of two points of G1
    function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {
        uint[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-add-failed");
    }
    /// @return r the product of a point on G1 and a scalar, i.e.
    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.
    function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {
        uint[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require (success,"pairing-mul-failed");
    }
    /// @return the result of computing the pairing check
    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should
    /// return true.
    function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {
        require(p1.length == p2.length,"pairing-lengths-failed");
        uint elements = p1.length;
        uint inputSize = elements * 6;
        uint[] memory input = new uint[](inputSize);
        for (uint i = 0; i < elements; i++)
        {
            input[i * 6 + 0] = p1[i].X;
            input[i * 6 + 1] = p1[i].Y;
            input[i * 6 + 2] = p2[i].X[0];
            input[i * 6 + 3] = p2[i].X[1];
            input[i * 6 + 4] = p2[i].Y[0];
            input[i * 6 + 5] = p2[i].Y[1];
        }
        uint[1] memory out;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-opcode-failed");
        return out[0] != 0;
    }
    /// Convenience method for a pairing check for two pairs.
    function pairingProd2(G1Point memory a1, G2Point memory a2, G1Point memory b1, G2Point memory b2) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](2);
        G2Point[] memory p2 = new G2Point[](2);
        p1[0] = a1;
        p1[1] = b1;
        p2[0] = a2;
        p2[1] = b2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for three pairs.
    function pairingProd3(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](3);
        G2Point[] memory p2 = new G2Point[](3);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for four pairs.
    function pairingProd4(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2,
            G1Point memory d1, G2Point memory d2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](4);
        G2Point[] memory p2 = new G2Point[](4);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p1[3] = d1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        p2[3] = d2;
        return pairing(p1, p2);
    }
}
contract Verifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }
    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [4252822878758300859123897981450591353533073413197771768651442665752259397132,
             6375614351688725206403948262868962793625744043794305715222011528459656738731],
            [21847035105528745403288232691147584728191162732299865338377159692350059136679,
             10505242626370262277552901082094356697409835680220590971873171140371331206856]
        );
        vk.gamma2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.delta2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.IC = new Pairing.G1Point[](132);
        
        vk.IC[0] = Pairing.G1Point( 
            16623459359964827580778839685088982834565447240820067774647885722119187443117,
            16749751565142997063320405991794469338129617392755996638861928155574994174799
        );                                      
        
        vk.IC[1] = Pairing.G1Point( 
            10630969913164356408460945124487541047102239475975396686506224728868747089807,
            4445040274530719542067995415697173052016573558730210919025793218173206858122
        );                                      
        
        vk.IC[2] = Pairing.G1Point( 
            18971102518968260894847271742132848451093123685943619151802791475463540833836,
            20808133715474994490631975417884200796075201161892109497243771637773711485088
        );                                      
        
        vk.IC[3] = Pairing.G1Point( 
            9988790968667992554261300393305147233247330598086718660415152054139236492842,
            10216792449085768643621729411499018340341112494701954752958682120851281967851
        );                                      
        
        vk.IC[4] = Pairing.G1Point( 
            11081042071132876619928617573272232964706792021471304054205151797102990462752,
            17021891415594531761045294291128145420976687947107246099289513421424638095129
        );                                      
        
        vk.IC[5] = Pairing.G1Point( 
            17397360632922343833530845835792838999196448129820689673250686334367739111975,
            9568320938275043012786204276628320078361348080398754962440031944606842470147
        );                                      
        
        vk.IC[6] = Pairing.G1Point( 
            1491029978677040694250057968666242651306399171851525000553225651557710096276,
            12624911182664567795001809855429637135593228711960862526764615716266457238379
        );                                      
        
        vk.IC[7] = Pairing.G1Point( 
            5503947042122143756329868963643323318797175319198726129395721623718547436817,
            21266101432547234760462161973177793155084779190329353743067348825346266470314
        );                                      
        
        vk.IC[8] = Pairing.G1Point( 
            20196507477184692935114227223535549493617100339659348534538439804298804893235,
            10418949301190162955799671203808502776827952493555213224327428653250046470678
        );                                      
        
        vk.IC[9] = Pairing.G1Point( 
            6978634094688425998313502426436031418227263184150084437620067649783096066011,
            7539015739945165437614704585634373404605966547722900042103327807207369203218
        );                                      
        
        vk.IC[10] = Pairing.G1Point( 
            20864044156649178580033284547394513320317717934334833898174933571613953090026,
            8320693995955413603529158227270149920663367258811480598247043665565859762362
        );                                      
        
        vk.IC[11] = Pairing.G1Point( 
            566611670722886280165854783303053518867912878268631875293168229122282697143,
            10146123044503127526191663440005206804004002695671774605565749198858655098350
        );                                      
        
        vk.IC[12] = Pairing.G1Point( 
            7350280792645216739478472610892843378707915304469152303026667039206213581397,
            5834362018291587571502092972218017044805183242045314070331936814093542312330
        );                                      
        
        vk.IC[13] = Pairing.G1Point( 
            21229955404076432532251840082367479471611816282236437560335216062650879727513,
            15407779346530861721844417044113649685458330507013522721400720770450167217240
        );                                      
        
        vk.IC[14] = Pairing.G1Point( 
            18761866602883318407979357106634737394101969512919865684132678973029319065930,
            14738093707683263771128252815489839777194025014292629239850022699004731384701
        );                                      
        
        vk.IC[15] = Pairing.G1Point( 
            11871760725714526517979025640995459725840701420228417546267606012229734006990,
            11739682359503569897792649627922077169016369202605375233277048788547559133728
        );                                      
        
        vk.IC[16] = Pairing.G1Point( 
            15290081264730788201524498099499821014394891219655399010972054607523512404413,
            16245963234502888949288990302320422010655244256220723844660601520000480762970
        );                                      
        
        vk.IC[17] = Pairing.G1Point( 
            6688793602336061112369964019780108850373479316431465100071414655578080787805,
            6113831505908898925558593737721924887470196710262242270611108956358623144000
        );                                      
        
        vk.IC[18] = Pairing.G1Point( 
            5897322395012135339605995170582328869119070218438026678529829524588875531502,
            17239177910403230606716044780623142738603966893922230023895776507338877279904
        );                                      
        
        vk.IC[19] = Pairing.G1Point( 
            1285419327600330807837764577646115735509583900908175440895093166862904886021,
            4749784228967098538137950252643016904968912303235911514100566882261745754916
        );                                      
        
        vk.IC[20] = Pairing.G1Point( 
            13829419471994636446908211981515878671519455490608111381960801176852097062980,
            1066463003893993186623411068372284289555141661357694568902792407359821998808
        );                                      
        
        vk.IC[21] = Pairing.G1Point( 
            6086649598700095652060898294037458213607964530781788911424387382101494158616,
            20540716845320090129999153193732730433168315737052940370956180045719082627685
        );                                      
        
        vk.IC[22] = Pairing.G1Point( 
            7009643154877158148789019913624139448503173587854372561097123557438420142448,
            8313323207257845901856338954288576826465779547104725320594083553225637268376
        );                                      
        
        vk.IC[23] = Pairing.G1Point( 
            3148065128967072731555307164115213978122631359329846794686608934035150261170,
            14464835386633880399316453842991860736503161111815207569977817787073035162277
        );                                      
        
        vk.IC[24] = Pairing.G1Point( 
            18115984509787072271240948620097537101164231684172498720357410729257835396843,
            7593281826724785980768810025905700177863686951530015749030414612864233664871
        );                                      
        
        vk.IC[25] = Pairing.G1Point( 
            12054136375217519672279041967368439667231012734475851350916979607028639508115,
            5259188909971397612726308494517085642165567406689566951920140997703534632608
        );                                      
        
        vk.IC[26] = Pairing.G1Point( 
            265156572115836031896113461328039665642918267576618443139112600091102845583,
            8080960214258482110623505381155810225871304982785287926160965752843767321128
        );                                      
        
        vk.IC[27] = Pairing.G1Point( 
            1633811955280813741905440990502663454890111034761332923417701961487812787627,
            12381943618982338112359767318514898346365463174869579960179812821156668207513
        );                                      
        
        vk.IC[28] = Pairing.G1Point( 
            533995996030484982321395484176077901119633652762257505678610228614364902561,
            14613372037358817462922457218417274233807958618358960913130511972425126892036
        );                                      
        
        vk.IC[29] = Pairing.G1Point( 
            7386826206029760074662877202440178229309975936939604316067489309795024725846,
            14116711511357763476796798386336575585989451838560962340103328520161650453326
        );                                      
        
        vk.IC[30] = Pairing.G1Point( 
            7099553123886495909276187871033638429355787567348615824275820481926754268639,
            18722378167847658947741017593883641071101439360831192290609534959606108976657
        );                                      
        
        vk.IC[31] = Pairing.G1Point( 
            10276876520048715481923389197949366619001852984888876342882456303046670577008,
            15333758526305198075595251589810628770621782151185710360391386048198771734130
        );                                      
        
        vk.IC[32] = Pairing.G1Point( 
            1270931350724512107164789088423633486998603140803495789514450466716494040054,
            6681755416683271063357367187007663952784534098415756844923184055901787085440
        );                                      
        
        vk.IC[33] = Pairing.G1Point( 
            5529175749423569235722021282599432522982286990251116966091667996215054709685,
            18451678101652621101112631439563292075024801106226797429804199074592452400584
        );                                      
        
        vk.IC[34] = Pairing.G1Point( 
            2070053435521401061944870121366811740540017751759696086750607789384102300315,
            6903357463038941784982827149702518857402126800679285180826603620914088536440
        );                                      
        
        vk.IC[35] = Pairing.G1Point( 
            19083810021220742187806708606717401734425788414042672985268128302123272284341,
            16392058098826674712369317324013188721004910299536164329411297880810197920843
        );                                      
        
        vk.IC[36] = Pairing.G1Point( 
            7202962326163013623236372425330746433023223774127050578014927663416913701198,
            1377811990749931510868211328929356458971550979479214818782226512820726089708
        );                                      
        
        vk.IC[37] = Pairing.G1Point( 
            7348553563777258356808526257822527402645666464761485158527282086860231520749,
            5733681064518959186920525772734413058644022568259460788260109840372447171257
        );                                      
        
        vk.IC[38] = Pairing.G1Point( 
            11317902104509205501289741365738729964145625742490051335198273430296243865913,
            4010494602497664548329590528773756974166787988935717918726545751399387175232
        );                                      
        
        vk.IC[39] = Pairing.G1Point( 
            20228446737250827479802364095958925045661928057148669053351987218527116894088,
            5941502550621062837718465288363660862307397046590749151017738399920743850022
        );                                      
        
        vk.IC[40] = Pairing.G1Point( 
            16850277017450880022410561540364111241213484538403331416560060639948405477191,
            2296827521122041464906205887854041887553937498603707368202085484652621991240
        );                                      
        
        vk.IC[41] = Pairing.G1Point( 
            4840918839024961079185868970070547552767466389771757960439979552101156590161,
            9959733862667334404442731181461588559053634923936286728902061040403898773575
        );                                      
        
        vk.IC[42] = Pairing.G1Point( 
            3777394600247005410941600996469616315960770728141512567628402034657333070748,
            5895297794470749772790515125751329154142807545678600696319576507797666669486
        );                                      
        
        vk.IC[43] = Pairing.G1Point( 
            6120344728853753596705134504692126558173273119108393261605356852861829658558,
            17232427038108629600100888177234414947780490362826738699136449502617479911276
        );                                      
        
        vk.IC[44] = Pairing.G1Point( 
            7547719893712403873120163403658741577686608318109239474542560268632174553418,
            15723056210837169022928766394399033271909150135170910079928895688639398209650
        );                                      
        
        vk.IC[45] = Pairing.G1Point( 
            11082883081252485089784342782224150804201476322515932529932064968833726047903,
            6016555986218363141906106911544590951009394228993465595509053385591268492929
        );                                      
        
        vk.IC[46] = Pairing.G1Point( 
            4319325485934298357264083433821894801183133352346467062812366962093704475574,
            3188694072188225512413016047286574337557938665502376034897058727323929892869
        );                                      
        
        vk.IC[47] = Pairing.G1Point( 
            18015534277442384802390187270158543191476707094952547583475600728258913554335,
            16909593677710320142904477685541159018794875114506391910182341055366097618517
        );                                      
        
        vk.IC[48] = Pairing.G1Point( 
            20218272764517427499770822421683406422739355909260543825318113227949530156466,
            13688508829862826889628387551724129837586572939158661109920548375738728469957
        );                                      
        
        vk.IC[49] = Pairing.G1Point( 
            12781303759625235674718831365339333963481785088778258196728890930991624358062,
            10061188963425200652617847968374709450242894255271571880012675904258432491035
        );                                      
        
        vk.IC[50] = Pairing.G1Point( 
            5754997393929083833183185713761053472493445439204196330279524060237922560063,
            394786847678136460249162734989207080350621513184516346759360026163237813029
        );                                      
        
        vk.IC[51] = Pairing.G1Point( 
            15984452256655064687692707984667448957181855210906984110812523545931982140620,
            6558446972198019365473779504926628918373062682558369869642547518655844048514
        );                                      
        
        vk.IC[52] = Pairing.G1Point( 
            5459225682879227751059435118433932879502363561017198040086819351230336927128,
            17459572328006375071229487336522978860952231163037280259124062150874298800564
        );                                      
        
        vk.IC[53] = Pairing.G1Point( 
            7382829622635787503931552283626384949903108820900626134776385469270673600738,
            14624051854843969509545775614622129520896882872432686960231520891581299304270
        );                                      
        
        vk.IC[54] = Pairing.G1Point( 
            14052246796514135247122693205930384361394621927711157724081563084133329994310,
            3724342676946372272752837903864129401403208618358462643772955558642706016452
        );                                      
        
        vk.IC[55] = Pairing.G1Point( 
            12656130210317104039238173561579935085447688866694418313988532844170684524259,
            16361467989763362820533295655493821919337316262247310131007257414842751922122
        );                                      
        
        vk.IC[56] = Pairing.G1Point( 
            10302830827573887046085781013101530172706185745842298502492409046692873733104,
            8493115263422766569951438701307141437078389957871040561737973653044821927324
        );                                      
        
        vk.IC[57] = Pairing.G1Point( 
            10896345100532247674068543206541127615850037263953716411527905502755467904167,
            21357521920912964686823808204312393422643310503633011168964146662896462570012
        );                                      
        
        vk.IC[58] = Pairing.G1Point( 
            4492520425858189359070516761110138187077101111623642934918528976373758575089,
            567941676998295765088315123229760437989257970158115892835512335015403246327
        );                                      
        
        vk.IC[59] = Pairing.G1Point( 
            19080948867488866185387134656973649893669085353208942318919417211792036035997,
            9373006481048243747387998172297593011409515416276420006935369544901796463929
        );                                      
        
        vk.IC[60] = Pairing.G1Point( 
            21487901814297843338223481540360739836377016478851343748575364718736039580010,
            5419991371411717802761217522248012593488397815335383686692407402507506680109
        );                                      
        
        vk.IC[61] = Pairing.G1Point( 
            14946793157273162304710338512706673733838198491767790928920236195700013764653,
            21614186771991923024424729663578435508499597124933917299408162167352750004550
        );                                      
        
        vk.IC[62] = Pairing.G1Point( 
            13028111233049093560699712017158120609994180777888821892896203708782463666482,
            13035371567384611107579666236674810198692116088509205989626692068682605168313
        );                                      
        
        vk.IC[63] = Pairing.G1Point( 
            16702636124198329909938135222538607635875506699514018409530317723263085699385,
            17937644191035661888419393471558891603881587287736696523728383503132607619
        );                                      
        
        vk.IC[64] = Pairing.G1Point( 
            12855502327710724337546734154739877764292956185278018598784269421894390466912,
            14428594628800330043678463442684259170439861579190822035575790960856812732299
        );                                      
        
        vk.IC[65] = Pairing.G1Point( 
            7039129253355759492389604622666100241212844513314486228867850925165032970249,
            6357372904414299790588351887210639561127229678957658153905637806791251329171
        );                                      
        
        vk.IC[66] = Pairing.G1Point( 
            17333871962418673034266016253112751948641943154066688586583004150434178684275,
            9930546876658809306461582055275284756517532782480825244039223626901196336633
        );                                      
        
        vk.IC[67] = Pairing.G1Point( 
            16574620278768591910626056039087128427442840360168290185066778215095122597190,
            3878773750538854585522893292889857758764419530909901652232574379212132048206
        );                                      
        
        vk.IC[68] = Pairing.G1Point( 
            7294469890925970506043664610942059231084927078455793117135389071686497801259,
            7988922821675917274568340811398783726305218654541002723417881447461656491302
        );                                      
        
        vk.IC[69] = Pairing.G1Point( 
            20224794264057839800182590124120089230775288755693935329443567210068346995467,
            17132018766471699123439584752750329144606550601349642094416515119882168952794
        );                                      
        
        vk.IC[70] = Pairing.G1Point( 
            7836947633379062875375920643795981427711113416201597614479803455406147345405,
            2925896170752528058706349391052843738257623869291266894933976239210128270098
        );                                      
        
        vk.IC[71] = Pairing.G1Point( 
            12210965913763505569577828978189828771381238876915703809301012874583293566341,
            835544575767804757885983377545909761370111757005234431774790678551488692216
        );                                      
        
        vk.IC[72] = Pairing.G1Point( 
            3825095468934196974246561653955256272936487430120417340729324550558810305198,
            16545607078221426261355884838572060542302775915632696527241005935737682406501
        );                                      
        
        vk.IC[73] = Pairing.G1Point( 
            6141180470468071152304482322522380468502025617336979537140867895856001526409,
            9817237614633712893700717997512609566680093405839472145981707605118744125522
        );                                      
        
        vk.IC[74] = Pairing.G1Point( 
            3114786774131793132608705105535613486813486924929128705490396873945457748834,
            4199358701677395581267019268046952941631339287732456223128893093448206744345
        );                                      
        
        vk.IC[75] = Pairing.G1Point( 
            18789307714364916755015448997385882135378958976820616684899139423335519312305,
            6326213066898471229993859242664874911854861305100841583046576608736230761150
        );                                      
        
        vk.IC[76] = Pairing.G1Point( 
            17759318978073761585635530192730779060963075107446063076047233808080567143306,
            9211956345978105020390137722778952809442053154689696195583251095324085813129
        );                                      
        
        vk.IC[77] = Pairing.G1Point( 
            3700158890365407421701208077514011092895655564130929983911643763218768325221,
            2487751082316959267473832285763031693331236403883781718918392816437010758506
        );                                      
        
        vk.IC[78] = Pairing.G1Point( 
            9452565012509842864852194847421912365392642563049948221880544071955015719950,
            7040993948269655723751598441392641206134035729416992352851026263073292161197
        );                                      
        
        vk.IC[79] = Pairing.G1Point( 
            3657062556929399172201814072284034307257784097163269863528210514788066621878,
            2000716075611621232329900266343341371111883752574188208788439674307961047881
        );                                      
        
        vk.IC[80] = Pairing.G1Point( 
            18407111175041773919109798998471616798703801612619100699815881008025560169430,
            10908143988248797541581313059104272372140375076332521541542002934450794263267
        );                                      
        
        vk.IC[81] = Pairing.G1Point( 
            14686268632153507869844286168940715456966061806985103127503489398632140738197,
            3712083040906181131082659372363910796100383293465433617688732439826462099020
        );                                      
        
        vk.IC[82] = Pairing.G1Point( 
            4262192690585040096389862489000962046744262986331823319474711064075740992758,
            13119150724165152485130837104943243206935618149063224778816502387350788604371
        );                                      
        
        vk.IC[83] = Pairing.G1Point( 
            1211497143102500513587449633181848843318332487445046943936259114327497059709,
            9570790242995826360902513365185614107609511607509420916918440163819353796334
        );                                      
        
        vk.IC[84] = Pairing.G1Point( 
            20633265214456317437475141487968014878120832788302414804960305769570278309787,
            11847003661704339018127496602288406689779469783561692766288868905998733297706
        );                                      
        
        vk.IC[85] = Pairing.G1Point( 
            7541751573133069766161153435694499622614565957067714033467901431327814305628,
            15226740482462971731048313617462880840562753073380222010757959482262568543716
        );                                      
        
        vk.IC[86] = Pairing.G1Point( 
            15970559510681336973679759282390187305621751675623720502401279678302317611523,
            11723903998228379700749215853199039439001509236099651453576518045569101566278
        );                                      
        
        vk.IC[87] = Pairing.G1Point( 
            787255304900602761241194152239647077735690085655668984460356581031369367754,
            9319085594873171292340627078371712885973437024413926417730801036156214819941
        );                                      
        
        vk.IC[88] = Pairing.G1Point( 
            9453493861050102964982111789335063453989674191458184638241575695668146778055,
            20467993847923193208699607793445211724566359174607864228469846024062319632001
        );                                      
        
        vk.IC[89] = Pairing.G1Point( 
            21695658686552053173157015367226200518424163838553084754191550108587969666661,
            21421186768370357812435527888048171885491170402652005640256716716592300249042
        );                                      
        
        vk.IC[90] = Pairing.G1Point( 
            2235991547716752654553865763077751965791223697909825577193375303454942219378,
            7820026099939563149314101609212346074041593298068159170324290033716315736855
        );                                      
        
        vk.IC[91] = Pairing.G1Point( 
            5515647498315454029289318530809030066190082761437453496655353391185016750405,
            2223540643684209626786832551214517987018393222750201737783394154054872239234
        );                                      
        
        vk.IC[92] = Pairing.G1Point( 
            4015097852225647668374278209601967481331260646402692746892376357686471753008,
            7089059540233361227760790794935706370556473655113762491303841768335858907574
        );                                      
        
        vk.IC[93] = Pairing.G1Point( 
            20972954881687192315776546378121418100708549004351030527101108169375190339038,
            17163259495382913940156441084323500759488298793721964059342562019600772343905
        );                                      
        
        vk.IC[94] = Pairing.G1Point( 
            4451292234811647781118493236107894648504626313614577879007449655976978280516,
            10375438117860412481192529221258501081366505391139756744730270884557641573308
        );                                      
        
        vk.IC[95] = Pairing.G1Point( 
            1161140574829821399749260716840807497887076363758853684186818109626445884607,
            1491085385478355869176812559543723613565078129277376135180738157729649329984
        );                                      
        
        vk.IC[96] = Pairing.G1Point( 
            21841045538064990918152211900872423616036136770374009564884011119007785456588,
            19349565162861230333768842252648824526570305636107703419184262667909930163339
        );                                      
        
        vk.IC[97] = Pairing.G1Point( 
            5901275739713269378667630709051350206831976724208966759347358409525208637322,
            13498988889209164763561261798070790169519762767425047864540807255500714111662
        );                                      
        
        vk.IC[98] = Pairing.G1Point( 
            3758029290077372645877361520167454836751570525650829186234322163504532334530,
            800458786264897239387312677555206239561603972412798051421107086806089049477
        );                                      
        
        vk.IC[99] = Pairing.G1Point( 
            5897097261848151549892055274321703380445469593296930056193125979895114641607,
            19291655496999832715362699914284615407945192541528806501566349811066330049538
        );                                      
        
        vk.IC[100] = Pairing.G1Point( 
            12679437332506700405478645299639583754482094756832413852038884089222307707740,
            12491723700741245585806982236463490481715761036664305528953368549148185286900
        );                                      
        
        vk.IC[101] = Pairing.G1Point( 
            20501434165600000077984298109554290576608065590989786279593001234189133347673,
            16374011665867830720388331554793257030560026504735933149409567754103816513946
        );                                      
        
        vk.IC[102] = Pairing.G1Point( 
            20653594702628198850683868127559016833011038913643684607043459306113953682180,
            20996214784507020121437911146735979727835735463320184834084731576889269714320
        );                                      
        
        vk.IC[103] = Pairing.G1Point( 
            4365251498381837573312568827013475175820393714930833555135161742492342743166,
            21612268033690337291452399306390705108644228223067280860671397047889248692650
        );                                      
        
        vk.IC[104] = Pairing.G1Point( 
            16901295397153610753719435850410649350831259559315321799021125537024279527225,
            17492659852684841414198247874408648493579205559398144510668909341357116496708
        );                                      
        
        vk.IC[105] = Pairing.G1Point( 
            18576480990253308382343547659681974477544334922272647180746356000790639069997,
            17457583779944882165790567237071937552152732380535874995936512861040075867252
        );                                      
        
        vk.IC[106] = Pairing.G1Point( 
            17118554222687649299489774867339494399399076387684079977703487662879831033738,
            3495754940665434356115312614044508744980104989903290525611898617766325726377
        );                                      
        
        vk.IC[107] = Pairing.G1Point( 
            3147272813404042669821209018341477082264051090033626936305598807819001023472,
            13477952591438622986500648954469203584567149674467091101102714352141759248487
        );                                      
        
        vk.IC[108] = Pairing.G1Point( 
            11452474062509904182679036242981155241133053845456992032276374328883536912922,
            21532307702694369788544385648517187910682055655481874370290403397731603994209
        );                                      
        
        vk.IC[109] = Pairing.G1Point( 
            1655499358926103155085467703527478157255907045485961377468608726845142986520,
            16153921516433884366715571208313118645627054033998717006915720401979866743888
        );                                      
        
        vk.IC[110] = Pairing.G1Point( 
            706553781214499598918030827236150697851678292923027979672675577449552741366,
            16141006510271851304856659661028535263303364943920714609381555918470176646700
        );                                      
        
        vk.IC[111] = Pairing.G1Point( 
            7524918854195228758833880086308007815197586100257689405929266278538880350605,
            11820640728429672865492697893852499811457927614209031766800744225245041853920
        );                                      
        
        vk.IC[112] = Pairing.G1Point( 
            953935242992291023269049147178648261965753421479542174646630188456672411357,
            1850905301316380826895161564275160651126852470034553544513398628096690374294
        );                                      
        
        vk.IC[113] = Pairing.G1Point( 
            2252451186216024108121840086825572641821291889743638514621270864167416066137,
            13103844523739483898278315278173030133038603686417324816737187617117193027148
        );                                      
        
        vk.IC[114] = Pairing.G1Point( 
            10631403384166196377907514628730558259433416887154661848610427361685443445432,
            6591430231752178717112021346587944550986388907533379698348908735726372978616
        );                                      
        
        vk.IC[115] = Pairing.G1Point( 
            21640989822798565327014513738814491286188371624109231412302353740945677105984,
            8528265470226876266969313681741496814559864600847034717572057672226805021688
        );                                      
        
        vk.IC[116] = Pairing.G1Point( 
            5951395801878627653596766475191187175596046168648840689046743250789189871525,
            4252502685866529130091591280606221300720550357697432412680247343706569563089
        );                                      
        
        vk.IC[117] = Pairing.G1Point( 
            14705053037974070510839759203543385201868649644488625385302640053413335978211,
            15460737540986278652374590874083515288718968009181335841183461747065747418651
        );                                      
        
        vk.IC[118] = Pairing.G1Point( 
            14688333030398492748817633517428900615860984810530010536060476401468421882715,
            6464180413512215282864244389905105773017791171525200485440850769955647622509
        );                                      
        
        vk.IC[119] = Pairing.G1Point( 
            7912792713318038275193648235456812000079515731995970302953111726018895476887,
            15691636594871223867421048951175410392684267569703299989077356461732751240648
        );                                      
        
        vk.IC[120] = Pairing.G1Point( 
            10887439113351491278771807038933107355487940332595744501518474154269433017038,
            1154256077849081138017073813532929933408774219373552808716259303227869500169
        );                                      
        
        vk.IC[121] = Pairing.G1Point( 
            8061205315979376721077491014646084174462722994223899108388080125534028710914,
            4734683365591921930643265422873903781090756018636845485258745624697691532830
        );                                      
        
        vk.IC[122] = Pairing.G1Point( 
            14650958821302364064130736497313543234090273120417381792101293459312828977425,
            21099420076284031049312125265635597894195170616472741874651456233694621150236
        );                                      
        
        vk.IC[123] = Pairing.G1Point( 
            10693807351191434948832610953091147988913508110790854898459130027866295138359,
            4468891140288978140445864187783867017855528318797940387162495045341774610008
        );                                      
        
        vk.IC[124] = Pairing.G1Point( 
            10932162311427493612352558265678375592560621113914890234177485561381136912948,
            6154324300020648138738652104581517201743190842072743537436164229370903858046
        );                                      
        
        vk.IC[125] = Pairing.G1Point( 
            5147796473163158056632116669664343522443568106224105187490944486885580255348,
            10142212918764788545828656420441516593700966442785592274726612058403414904967
        );                                      
        
        vk.IC[126] = Pairing.G1Point( 
            17010032050318995813685147391177239576764203334543472954486431215376364715661,
            11813402423539139603959506496291147219347069850562862077080922144336734976504
        );                                      
        
        vk.IC[127] = Pairing.G1Point( 
            1306544527941424141448253119720120142972578869580306755651364332668205216658,
            20636582470925001062216999599096526735771044865115060580777639390770015483839
        );                                      
        
        vk.IC[128] = Pairing.G1Point( 
            17990703057733831778413723479920988795423106882696962664908007228470873816859,
            18344689144495707069206301185704725811021750894970918260645294849739401263333
        );                                      
        
        vk.IC[129] = Pairing.G1Point( 
            9040539162001866676151238297195311731542355549989385053751532817724628748038,
            17338954708410608144277696509423956038012577147768873494880981995090037308781
        );                                      
        
        vk.IC[130] = Pairing.G1Point( 
            17494462477331847641643742308696578760956125856770219666545618720017807528509,
            3013626609701023119585988112995263523746631163059220767508061698448525064876
        );                                      
        
        vk.IC[131] = Pairing.G1Point( 
            21055205738449618540242883347313193868902043606103878175604664467311055466044,
            15289145057979319577736268448772224458939856111294657626956150895080589658128
        );                                      
        
    }
    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length + 1 == vk.IC.length,"verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return 1;
        return 0;
    }
    /// @return r  bool true if proof is valid
    function verifyProof(
            uint[2] memory a,
            uint[2][2] memory b,
            uint[2] memory c,
            uint[131] memory input
        ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for(uint i = 0; i < input.length; i++){
            inputValues[i] = input[i];
        }
        if (verify(inputValues, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}
